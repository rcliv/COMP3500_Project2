1. 29
2. the LAMEbus
3. splhigh sets spl to the highest value, disabling all interrupts. spl0 sets spl to 0, enabling all interupts
4. because we are using 32 bit unsigned integers not just 32 bit signed integers
5. returns the old spl level
6. 15 mips/include/spl.h
7. if OPT_SYNCHPROBS then 10000 harclocks per second else 100 hardclocks per second goes off HZ times per second
8. dev/generic/console.c 
    1. con_open
    2. con_close
    3. con_io
    4. con_ioctl
    5. attach_console_to_vfs
    6. NOTE: the above functions are implementations of the below functions of the device struct
    7. the device struct has functions include/dev.h
        1. d_open
        2. d_close
        3. d_io
        4. d_ioctl
        5. this is the struct that a device has to be a part of
9. 32 kern/include/kern/sfs.h
10. 15 kern/include/kern/sfs.h
11. kern/include/fs.h
    1. fs_sync
    2. fs_getvolname
    3. fs_getroot
    4. fs_unmount
12. kern/include/thread.h
    1. thread_sleep
13. kern/include/kern/types.h
    1. 32 bit integer
14. kern/include/vnode.h
    1. vop_open
    2. vop_close
    3. vop_reclaim
    4. vop_read
    5. vop_readlink
    6. vop_getdirentry
    7. vop_write
    8. vop_ioctl
    9. vop_stat
    10. vop_gettype
    11. vop_tryseek
    12. vop_fsync
    13. vop_mmap
    14. vop_truncate
    15. vop_namefile
    16. vop_creat
    17. vop_symlink
    18. vop_mkdir
    19. vop_link
    20. vop_remove
    21. vop_rmdir
    22. vop_rename
    23. vop_lookup
    24. vop_lookparent
    25. 
15. include/kern/limits.h
    1. 1024
16. include/kern/unistd.h
    1. #define RB_REBOOT 0
17. include/kern/unistd.h 
    1. #define STDIN_FILENO
18. yes, because the thread initializer doesn’t mention any dependencies on the scheduler in its comment or in its code, and the scheduler initializer doesn’t mention any dependencies on the thread. in fact if there are no threads when the scheduler is initialized then it will call cpu_idle until something’s ready
19. kern/thread/thread.c
    1. Zombies are threads/processes that have exited but not been fully deleted yet
20. kern/thread/scheduler.c confirmed in kern/include.quere.h
    1. 32
21. kern/fs/vfs/device.c
    1. “The name of a device is always just ‘device:’. The VFS layer puts in the device name for us, so we don’t need to do anything further.”
    2. from kern/fs/vfs/vfslist.c “device name must always be a valid string” e.g. “1hg0”
22. kern/fs/vfs/vfslist.c
    1. just the name of the device with raw appended
    2. e.g. “1hg0raw”
23. from kern/include/vnode.h used in kern/fs/vfs/vnode.c
    1. vn_countlock
24. kern/fs/vfs/device.c
    1. block devices and character devices
